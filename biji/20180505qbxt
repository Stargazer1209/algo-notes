#include<iostream>
begin.
字符串：
	存储：
	C语言，字符数组；
	C++，string类；
	最后一位是'\0';
	
	基本操作：
	取长度、把前者链接到后者的后面、在后者中寻找前者、比较长度大小、循环处理时避免重复计算；
	C语言就用函数；
	C++可以用成员函数和运算符；
	
	KMP算法：
	求B在A里面出现了几次；
	暴力匹配，逐位比较；
	F[I]:最大的K，使得A后K位等于B前K位；
	NEXT[I]:最大的K，使得B前K位等于后K位；
	先算NEXT再算F，这是怎么想出来的想法······；
	https://www.cnblogs.com/zhangtianq/p/5839909.html；
	
	trie树：
	共用节点存储多个字符串；
	插入：有对应边就继续，无对应边就新建；
	遍历：在单词末尾加个标记；首先指向根节点，其次若每个字符都存在而且末尾有单词标记则找到；
	性质：要求每个节点的子节点记录的字符不相同；
	查询速度快，空间复杂度小；
		例题：
		给出备选单词，对于按照九键输入法数字给出的单词进行查询；
		
end.
