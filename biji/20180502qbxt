数论：
  模意义下的运算：
    加减乘除是封闭的；
    费马小定理：若P为质数，且A不是P的倍数，则P-1 的阶乘 同余A的P-1 次方 乘以P-1 次方，
    欧拉定理；
    快速幂：
    inline int pw(int a,int b,int mod)
    {
      int r=1;
      while(b>0)
      {
        if(b&1)
        {
          r=(ll)r*a%mod;
          ll(a)*=a%mod;
          b>>=1;
         }
       }
       return r;
     }
     快速乘法：解决爆ll；
     最大公因数：
      更相减损术;
      辗转相除术；
    高精度：
      更相减损术加优化（）；
     分解质因数：
      朴素算法：枚举不超过根号N的质数并试除；
      枚举因子；
      筛法：
        求因子个数bala都不在话下啦。
      线性同余方程：
        方程有解等价于A,P的GCD是B的因数；
        拓展欧几里得算法（专用于此）：
          int exgcd(int a,int b,int *x,int *y)
          {
            if(!b)
            {
              *x=1,*y=0;
              return a;
            }
            int r=exgcd(b,a%b,x,y);
            int t=*x;
            *x=*y;
            *y=t-a/b*(*y);
            return r;
          }
          推广：
            好像是乘了个K；
      例题：
        HDU2824
          通过预处理:筛法快速算出每个数的质因数分解；
          然后就可以快速求φ（i）；
    神奇的预测：
      中国剩余定理；
      线性筛法；
      miller-rabin素数判定法；
      离散对数；
        大步小步算法；
位运算：
  集合操作：
    
  枚举子集：
    int x;
    for(int i=x;i>0;i=(i-1)&x)
    //...极优秀的复杂度
   std::bitset支持以上两类操作：
    以及状态压缩的DP；
STL：
  unque:使用前排序，去重，同时返回去重后序列末尾 指针 ；
  next_permutation:解决字典序问题；
  bound系列：用二分法找到第一个(第一个严格）大于X的元素；
  <utility>:pair相当于两个元素的结构体，并自动重载；
  <iostream>：endl可以刷新缓冲区；
  set map multiset（允许重复元素）vector 
  迭代器：包装指针，
